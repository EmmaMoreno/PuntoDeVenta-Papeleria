/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package app;

import java.awt.event.ItemEvent;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.time.LocalDateTime;
import java.util.Calendar;
import java.util.Date;
import java.util.GregorianCalendar;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import java.time.format.DateTimeFormatter;

/**
 *
 * @author exbex
 */
public class Compras extends javax.swing.JFrame {

    Thread hilo;
    String hora, minuto, segundo;
    String aÃ±o, mes, dia, fechaCompleta;
    int getSelectedIndexProveedores = 0;
    int getSelectedIndexMarcas = 0;
    int getSelectedIndexProductos = 0;
    String getSelectedItemProveedores = "";
    String getSelectedItemMarcas = "";
    String getSelectedItemProductos = "";
    DefaultTableModel modeloTabla;
    double importe = 0;

    /**
     * Creates new form Compras
     */
    public Compras() {
        initComponents();
        modeloTabla = (DefaultTableModel) JTListado.getModel();
        modeloTabla.setRowCount(0);
        llenarComboBoxProveedores();
        llenarComboBoxMarcas();
        JLTotal.setText("0.0");
        JCBProveedores.addItemListener((ItemEvent a) -> {
            if (a.getStateChange() == ItemEvent.SELECTED) {
                getSelectedIndexProveedores = JCBProveedores.getSelectedIndex() + 1;
                getSelectedItemProveedores = JCBProveedores.getSelectedItem().toString();
            }
        });

        JCBMarcas.addItemListener((ItemEvent a) -> {
            if (a.getStateChange() == ItemEvent.SELECTED) {
                getSelectedIndexMarcas = JCBMarcas.getSelectedIndex() + 1;
                getSelectedItemMarcas = JCBMarcas.getSelectedItem().toString();
                JCBProductos.removeAllItems();
                PreparedStatement ps;
                ResultSet rs;
                try {
                    Connection con = Conexion.getConexion();
                    ps = con.prepareStatement("SELECT DISTINCT(Productos.NombreProducto) AS NombreProducto FROM Proveedores, Marcas, Productos WHERE FIDMarca = ?");
                    ps.setInt(1, getSelectedIndexMarcas);
                    rs = ps.executeQuery();
                    while (rs.next()) {
                        String producto = rs.getString("NombreProducto");
                        JCBProductos.addItem(producto);
                    }
                } catch (SQLException sqle) {
                    JOptionPane.showMessageDialog(null, sqle.toString());
                }
            }
        });

        JCBProductos.addItemListener((ItemEvent a) -> {
            if (a.getStateChange() == ItemEvent.SELECTED) {
                getSelectedIndexProductos = JCBProductos.getSelectedIndex() + 1;
                getSelectedItemProductos = JCBProductos.getSelectedItem().toString();
            }
        });
    }

    public void hora() {
        Calendar calendario = new GregorianCalendar();
        Date horaActual = new Date();
        calendario.setTime(horaActual);
        hora = calendario.get(Calendar.HOUR_OF_DAY) > 9 ? "" + calendario.get(Calendar.HOUR_OF_DAY) : "0" + calendario.get(Calendar.HOUR_OF_DAY);
        minuto = calendario.get(Calendar.MINUTE) > 9 ? "" + calendario.get(Calendar.MINUTE) : "0" + calendario.get(Calendar.MINUTE);
        segundo = calendario.get(Calendar.SECOND) > 9 ? "" + calendario.get(Calendar.SECOND) : "0" + calendario.get(Calendar.SECOND);
    }

    public void run() {
        Thread current = Thread.currentThread();
        for (int i = 1; i > 0; i++) {
            if (i > 0) {
                hora();
                JLHora.setText(hora + ":" + minuto + ":" + segundo);
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        JCBProveedores = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        JCBProductos = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        JCBMarcas = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        JTFCantidad = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        JTFPrecioCompra = new javax.swing.JTextField();
        JBAgregar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        JTListado = new javax.swing.JTable();
        jLabel7 = new javax.swing.JLabel();
        JLTotal = new javax.swing.JLabel();
        JBEliminar = new javax.swing.JButton();
        JBCancelar = new javax.swing.JButton();
        JBGrabar = new javax.swing.JButton();
        JBNProveedor = new javax.swing.JButton();
        JBNMarca = new javax.swing.JButton();
        JBNProducto = new javax.swing.JButton();
        FondoBlanco = new javax.swing.JLabel();
        FondoAzul = new javax.swing.JLabel();
        JLHora = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Arial", 0, 45)); // NOI18N
        jLabel1.setText("Compra");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(69, 60, -1, -1));

        jLabel2.setFont(new java.awt.Font("Arial", 0, 40)); // NOI18N
        jLabel2.setText("Proveedor:");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(69, 180, -1, -1));

        JCBProveedores.setFont(new java.awt.Font("Arial", 0, 25)); // NOI18N
        getContentPane().add(JCBProveedores, new org.netbeans.lib.awtextra.AbsoluteConstraints(404, 164, 340, 78));

        jLabel3.setFont(new java.awt.Font("Arial", 0, 40)); // NOI18N
        jLabel3.setText("Producto:");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(69, 308, -1, -1));

        JCBProductos.setFont(new java.awt.Font("Arial", 0, 25)); // NOI18N
        getContentPane().add(JCBProductos, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 290, 340, 78));

        jLabel4.setFont(new java.awt.Font("Arial", 0, 40)); // NOI18N
        jLabel4.setText("Marca:");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(69, 436, 130, 40));

        JCBMarcas.setFont(new java.awt.Font("Arial", 0, 25)); // NOI18N
        JCBMarcas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JCBMarcasActionPerformed(evt);
            }
        });
        getContentPane().add(JCBMarcas, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 420, 340, 78));

        jLabel5.setFont(new java.awt.Font("Arial", 0, 40)); // NOI18N
        jLabel5.setText("Cantidad:");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 700, -1, -1));

        JTFCantidad.setBackground(new java.awt.Color(155, 164, 180));
        JTFCantidad.setFont(new java.awt.Font("Arial", 0, 30)); // NOI18N
        JTFCantidad.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                JTFCantidadKeyTyped(evt);
            }
        });
        getContentPane().add(JTFCantidad, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 680, 350, 78));

        jLabel6.setFont(new java.awt.Font("Arial", 0, 40)); // NOI18N
        jLabel6.setText("P. de Compra:");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(69, 564, -1, -1));

        JTFPrecioCompra.setBackground(new java.awt.Color(155, 164, 180));
        JTFPrecioCompra.setFont(new java.awt.Font("Arial", 0, 30)); // NOI18N
        JTFPrecioCompra.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                JTFPrecioCompraKeyTyped(evt);
            }
        });
        getContentPane().add(JTFPrecioCompra, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 550, 350, 78));

        JBAgregar.setBackground(new java.awt.Color(61, 199, 105));
        JBAgregar.setFont(new java.awt.Font("Arial", 0, 40)); // NOI18N
        JBAgregar.setText("Agregar");
        JBAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JBAgregarActionPerformed(evt);
            }
        });
        getContentPane().add(JBAgregar, new org.netbeans.lib.awtextra.AbsoluteConstraints(484, 821, 260, 120));

        JTListado.setFont(new java.awt.Font("Arial", 0, 15)); // NOI18N
        JTListado.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Producto", "Marca", "Cantidad", "Precio", "Importe", ""
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        JTListado.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                JTListadoMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(JTListado);
        if (JTListado.getColumnModel().getColumnCount() > 0) {
            JTListado.getColumnModel().getColumn(6).setMinWidth(0);
            JTListado.getColumnModel().getColumn(6).setPreferredWidth(0);
            JTListado.getColumnModel().getColumn(6).setMaxWidth(0);
        }

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(1000, 160, 870, 480));

        jLabel7.setFont(new java.awt.Font("Arial", 0, 40)); // NOI18N
        jLabel7.setText("Total:");
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(1590, 716, -1, -1));

        JLTotal.setFont(new java.awt.Font("Arial", 0, 30)); // NOI18N
        getContentPane().add(JLTotal, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 380, 130, 40));

        JBEliminar.setBackground(new java.awt.Color(204, 17, 17));
        JBEliminar.setFont(new java.awt.Font("Arial", 0, 40)); // NOI18N
        JBEliminar.setText("Eliminar");
        JBEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JBEliminarActionPerformed(evt);
            }
        });
        getContentPane().add(JBEliminar, new org.netbeans.lib.awtextra.AbsoluteConstraints(992, 821, 260, 120));

        JBCancelar.setBackground(new java.awt.Color(215, 80, 56));
        JBCancelar.setFont(new java.awt.Font("Arial", 0, 40)); // NOI18N
        JBCancelar.setText("Cancelar");
        JBCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JBCancelarActionPerformed(evt);
            }
        });
        getContentPane().add(JBCancelar, new org.netbeans.lib.awtextra.AbsoluteConstraints(1302, 821, 260, 120));

        JBGrabar.setBackground(new java.awt.Color(20, 39, 78));
        JBGrabar.setFont(new java.awt.Font("Arial", 0, 40)); // NOI18N
        JBGrabar.setText("Grabar");
        JBGrabar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JBGrabarActionPerformed(evt);
            }
        });
        getContentPane().add(JBGrabar, new org.netbeans.lib.awtextra.AbsoluteConstraints(1612, 821, 260, 120));

        JBNProveedor.setBackground(new java.awt.Color(61, 199, 105));
        JBNProveedor.setFont(new java.awt.Font("Arial", 0, 15)); // NOI18N
        JBNProveedor.setText("Nuevo Proveedor");
        JBNProveedor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JBNProveedorActionPerformed(evt);
            }
        });
        getContentPane().add(JBNProveedor, new org.netbeans.lib.awtextra.AbsoluteConstraints(794, 164, 150, 78));

        JBNMarca.setBackground(new java.awt.Color(61, 199, 105));
        JBNMarca.setFont(new java.awt.Font("Arial", 0, 15)); // NOI18N
        JBNMarca.setText("Nueva Marca");
        JBNMarca.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JBNMarcaActionPerformed(evt);
            }
        });
        getContentPane().add(JBNMarca, new org.netbeans.lib.awtextra.AbsoluteConstraints(794, 420, 150, 78));

        JBNProducto.setBackground(new java.awt.Color(61, 199, 105));
        JBNProducto.setFont(new java.awt.Font("Arial", 0, 15)); // NOI18N
        JBNProducto.setText("Nuevo Producto");
        JBNProducto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JBNProductoActionPerformed(evt);
            }
        });
        getContentPane().add(JBNProducto, new org.netbeans.lib.awtextra.AbsoluteConstraints(794, 292, 150, 78));

        FondoBlanco.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Fondo Blanco - Reporte.png"))); // NOI18N
        getContentPane().add(FondoBlanco, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, -1, -1));

        FondoAzul.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Fondo Azul.jpg"))); // NOI18N
        getContentPane().add(FondoAzul, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 2120, -1));

        JLHora.setText("00:00:00");
        getContentPane().add(JLHora, new org.netbeans.lib.awtextra.AbsoluteConstraints(1780, 70, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void JBNProveedorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JBNProveedorActionPerformed
        Proveedores pro = new Proveedores();
        pro.setVisible(true);
    }//GEN-LAST:event_JBNProveedorActionPerformed

    private void JBAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JBAgregarActionPerformed
        agregar();
    }//GEN-LAST:event_JBAgregarActionPerformed

    private void JBEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JBEliminarActionPerformed
        eliminar();
    }//GEN-LAST:event_JBEliminarActionPerformed

    private void JBGrabarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JBGrabarActionPerformed
        tomarDatosDeTabla();
    }//GEN-LAST:event_JBGrabarActionPerformed

    private void JBNProductoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JBNProductoActionPerformed
        RegistroProductos pro = new RegistroProductos();
        pro.setVisible(true);
        
    }//GEN-LAST:event_JBNProductoActionPerformed

    private void JBNMarcaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JBNMarcaActionPerformed
        Marcas m = new Marcas();
        m.setVisible(true);
        
    }//GEN-LAST:event_JBNMarcaActionPerformed

    private void JTListadoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_JTListadoMouseClicked
        int fila = JTListado.getSelectedRow();
        JCBMarcas.setSelectedItem(modeloTabla.getValueAt(fila, 2));
        JCBProductos.setSelectedItem(modeloTabla.getValueAt(fila, 2));
        JTFCantidad.setText(String.valueOf(modeloTabla.getValueAt(fila, 3)));
        JTFPrecioCompra.setText(String.valueOf(modeloTabla.getValueAt(fila, 4)));
    }//GEN-LAST:event_JTListadoMouseClicked

    private void JBCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JBCancelarActionPerformed
        Menu frame = new Menu();
        frame.setVisible(true);
        dispose();
    }//GEN-LAST:event_JBCancelarActionPerformed

    private void JCBMarcasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JCBMarcasActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_JCBMarcasActionPerformed

    private void JTFPrecioCompraKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_JTFPrecioCompraKeyTyped
        char c = evt.getKeyChar();
        if ((c < '0' || c > '9') && (c != ' ')) evt.consume();
    }//GEN-LAST:event_JTFPrecioCompraKeyTyped

    private void JTFCantidadKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_JTFCantidadKeyTyped
        char c = evt.getKeyChar();
        if ((c < '0' || c > '9') && (c != ' ')) evt.consume();
    }//GEN-LAST:event_JTFCantidadKeyTyped

    private void agregar() {
        String[] datos = new String[7];
        datos[0] = String.valueOf(getSelectedIndexProductos);
        datos[1] = getSelectedItemProductos;
        datos[2] = getSelectedItemMarcas;
        datos[3] = JTFCantidad.getText();
        datos[4] = JTFPrecioCompra.getText();
        datos[5] = String.valueOf(Double.parseDouble(JTFCantidad.getText()) * Double.parseDouble(JTFPrecioCompra.getText()));
        datos[6] = String.valueOf(getSelectedIndexMarcas);
        modeloTabla.addRow(datos);
        importe += Double.parseDouble(JTFCantidad.getText()) * Double.parseDouble(JTFPrecioCompra.getText());
        JLTotal.setText(String.valueOf(importe));
        limpiar();
    }
    
    private void eliminar() {
        double quitar = 0.0;
        int fila = JTListado.getSelectedRow();
        if (fila >= 0) {
            quitar += Double.parseDouble(String.valueOf(modeloTabla.getValueAt(fila, 5)));
            importe -= quitar;
            JLTotal.setText(String.valueOf(importe));
            modeloTabla.removeRow(fila);
        } else {
            JOptionPane.showMessageDialog(null, "Selecciona una fila");
        }
    }

    private void llenarComboBoxProveedores() {
        PreparedStatement ps;
        ResultSet rs;
        try {
            Connection con = Conexion.getConexion();
            ps = con.prepareStatement("SELECT NombreProveedor FROM Proveedores");
            rs = ps.executeQuery();
            while (rs.next()) {
                String proveedor = rs.getString("NombreProveedor");
                JCBProveedores.addItem(proveedor);
            }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, e.toString());
        }
    }

    private void llenarComboBoxProductos() {
        PreparedStatement ps;
        ResultSet rs;
        try {
            Connection con = Conexion.getConexion();
            ps = con.prepareStatement("SELECT NombreProducto FROM Productos");
            rs = ps.executeQuery();
            while (rs.next()) {
                String producto = rs.getString("NombreProducto");
                JCBProductos.addItem(producto);
            }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, e.toString());
        }
    }

    private void llenarComboBoxMarcas() {
        PreparedStatement ps;
        ResultSet rs;
        try {
            Connection con = Conexion.getConexion();
            ps = con.prepareStatement("SELECT Marca FROM Marcas");
            rs = ps.executeQuery();
            while (rs.next()) {
                String marca = rs.getString("Marca");
                JCBMarcas.addItem(marca);
            }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, e.toString());
        }
    }

    private void limpiar() {
        JTFCantidad.setText("");
        JTFPrecioCompra.setText("");
    }

    private void tomarDatosDeTabla() {
        DateTimeFormatter fecha = DateTimeFormatter.ofPattern("yyyy/MM/dd");
        DateTimeFormatter hora = DateTimeFormatter.ofPattern("HH:mm:ss");
        LocalDateTime ahora = LocalDateTime.now();
        String Fecha = fecha.format(ahora);
        String Hora = hora.format(ahora);
        double imp = 0.0;
        int IDCompra = 0;
        for (int i = 0; i < JTListado.getRowCount(); ++i) {
            System.out.print("ID Producto " + JTListado.getValueAt(i, 0) + "\n");
            System.out.print("Marca " + JTListado.getValueAt(i, 2) + "\n");
            System.out.print("Producto " + JTListado.getValueAt(i, 1) + "\n");
            System.out.print("Cantidad " + JTListado.getValueAt(i, 3) + "\n");
            System.out.print("Precio " + JTListado.getValueAt(i, 4) + "\n");
            System.out.print("Importe " + JTListado.getValueAt(i, 5) + "\n");
            System.out.print("ID Marca " + JTListado.getValueAt(i, 6) + "\n");
            imp += Double.parseDouble(String.valueOf(JTListado.getValueAt(i, 5)));
            try {
                Connection con = Conexion.getConexion();
                //Primer tabla
                String query = "INSERT INTO Compras (Hora, Fecha, FIDProveedor) VALUES (?, ?, ?)";
                PreparedStatement ps = con.prepareStatement(query, Statement.RETURN_GENERATED_KEYS);
                ps.setString(1, Hora);
                ps.setString(2, Fecha);
                ps.setInt(3, getSelectedIndexProveedores);
                //Agregar el proveedor
                ps.executeUpdate();
                //JOptionPane.showMessageDialog(null, "Compras");
                //Guardar el IDCompra
                ResultSet GKR = ps.getGeneratedKeys();
                if (GKR.next()) {
                    IDCompra = GKR.getInt(1);
                }
                limpiar();
                //Segunda tabla
                PreparedStatement ps2 = con.prepareStatement("INSERT INTO ComprasDetalladas(PrecioCompra, CantidadComprada, Importe, FIDProducto, FIDCompra) VALUES(?, ?, ?, ?, ?)");
                ps2.setDouble(1, Double.parseDouble(String.valueOf(JTListado.getValueAt(i, 4))));
                ps2.setInt(2, Integer.parseInt(String.valueOf(JTListado.getValueAt(i, 3))));
                ps2.setDouble(3, Double.parseDouble(String.valueOf(JTListado.getValueAt(i, 5))));
                ps2.setInt(4, Integer.parseInt(String.valueOf(JTListado.getValueAt(i, 0))));
                ps2.setInt(5, IDCompra);
                ps2.executeUpdate();
                //JOptionPane.showMessageDialog(null, "Compras Detalladas");
                //Tercer tabla
                PreparedStatement ps3 = con.prepareStatement("UPDATE Productos SET Cantidad = Cantidad + ? WHERE Productos.FIDMarca = ? and IDProducto = ?");
                ps3.setInt(1, Integer.parseInt(String.valueOf(JTListado.getValueAt(i, 3))));
                ps3.setInt(2, Integer.parseInt(String.valueOf(JTListado.getValueAt(i, 6))));
                ps3.setInt(3, Integer.parseInt(String.valueOf(JTListado.getValueAt(i, 0))));
                ps3.execute();
                ps2.addBatch();
                //JOptionPane.showMessageDialog(null, "Update a Productos");
            } catch (SQLException e) {
                System.out.print(e.toString());
            }
        }
        //JLTotal.setText(String.valueOf(imp));
        JOptionPane.showMessageDialog(null, "Productos comprados");
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Compras.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Compras.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Compras.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Compras.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Compras().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel FondoAzul;
    private javax.swing.JLabel FondoBlanco;
    private javax.swing.JButton JBAgregar;
    private javax.swing.JButton JBCancelar;
    private javax.swing.JButton JBEliminar;
    private javax.swing.JButton JBGrabar;
    private javax.swing.JButton JBNMarca;
    private javax.swing.JButton JBNProducto;
    private javax.swing.JButton JBNProveedor;
    private javax.swing.JComboBox<String> JCBMarcas;
    private javax.swing.JComboBox<String> JCBProductos;
    private javax.swing.JComboBox<String> JCBProveedores;
    private javax.swing.JLabel JLHora;
    private javax.swing.JLabel JLTotal;
    private javax.swing.JTextField JTFCantidad;
    private javax.swing.JTextField JTFPrecioCompra;
    private javax.swing.JTable JTListado;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
