/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package app;

import java.awt.event.FocusEvent;
import java.awt.event.FocusListener;
import java.awt.event.ItemEvent;
import java.awt.event.ItemListener;
import java.awt.event.KeyEvent;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.DecimalFormat;
import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.Calendar;
import java.util.Date;
import java.util.GregorianCalendar;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import java.time.format.DateTimeFormatter;

/**
 *
 * @author exbex
 */
public class Venta extends javax.swing.JFrame {

    int getSelectedIndexProductos = 0;
    String getSelectedItemProductos = "";
    DefaultTableModel modeloTabla;
    String precio = "";
    String cantidad = "";
    double total = 0;
    double t = 0;
    //double ini = Double.parseDouble(JLInicial.getText());
    /**
     * Creates new form Venta
     */
    public Venta() {
        initComponents();
        llenarComboBoxProductos();
        modeloTabla = (DefaultTableModel) JTListado.getModel();
        modeloTabla.setRowCount(0);
        JCBProductos.addItemListener((ItemEvent a) -> {
            if (a.getStateChange() == ItemEvent.SELECTED) {
                getSelectedIndexProductos = JCBProductos.getSelectedIndex() + 1;
                getSelectedItemProductos = JCBProductos.getSelectedItem().toString();
                JLPrecio.setText("0.0");
                PreparedStatement ps;
                ResultSet rs;
                try {
                    Connection con = Conexion.getConexion();
                    ps = con.prepareStatement("SELECT PrecioVenta, Cantidad FROM Productos WHERE IDProducto = ?");
                    ps.setInt(1, getSelectedIndexProductos);
                    rs = ps.executeQuery();
                    while (rs.next()) {
                        precio = rs.getString("PrecioVenta");
                        cantidad = rs.getString("Cantidad");
                    }
                    JLPrecio.setText(precio);
                } catch (SQLException e) {
                    JOptionPane.showMessageDialog(null, e.toString());
                }
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel8 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        JCBProductos = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        JLPrecio = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        JTFCantidad = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        JTListado = new javax.swing.JTable();
        JBAgregar = new javax.swing.JButton();
        JBEliminar = new javax.swing.JButton();
        JLTotal = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        JBVender = new javax.swing.JButton();
        JTFPago = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        JLCambio = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        JBModificar = new javax.swing.JButton();
        JBCerrar = new javax.swing.JButton();
        FondoBlancoV = new javax.swing.JLabel();
        FondoAzul = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        JLInicial = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel8.setFont(new java.awt.Font("Arial", 0, 45)); // NOI18N
        jLabel8.setText("Punto de Venta");
        getContentPane().add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 50, -1, -1));

        jLabel4.setFont(new java.awt.Font("Arial", 0, 40)); // NOI18N
        jLabel4.setText("Producto");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(85, 189, -1, -1));

        JCBProductos.setFont(new java.awt.Font("Arial", 0, 25)); // NOI18N
        getContentPane().add(JCBProductos, new org.netbeans.lib.awtextra.AbsoluteConstraints(341, 173, 300, 78));

        jLabel2.setFont(new java.awt.Font("Arial", 0, 40)); // NOI18N
        jLabel2.setText("Precio");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(85, 317, -1, -1));

        JLPrecio.setFont(new java.awt.Font("Arial", 0, 40)); // NOI18N
        JLPrecio.setText("0.0");
        getContentPane().add(JLPrecio, new org.netbeans.lib.awtextra.AbsoluteConstraints(341, 321, 120, 50));

        jLabel3.setFont(new java.awt.Font("Arial", 0, 40)); // NOI18N
        jLabel3.setText("Cantidad");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(85, 445, -1, -1));

        JTFCantidad.setBackground(new java.awt.Color(155, 164, 180));
        JTFCantidad.setFont(new java.awt.Font("Arial", 0, 30)); // NOI18N
        JTFCantidad.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                JTFCantidadKeyTyped(evt);
            }
        });
        getContentPane().add(JTFCantidad, new org.netbeans.lib.awtextra.AbsoluteConstraints(341, 438, 300, 78));

        JTListado.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Producto", "Precio de Venta", "Cantidad", "Importe"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        JTListado.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                JTListadoMouseClicked(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                JTListadoMouseExited(evt);
            }
        });
        jScrollPane1.setViewportView(JTListado);
        if (JTListado.getColumnModel().getColumnCount() > 0) {
            JTListado.getColumnModel().getColumn(0).setMinWidth(0);
            JTListado.getColumnModel().getColumn(0).setPreferredWidth(0);
            JTListado.getColumnModel().getColumn(0).setMaxWidth(0);
        }

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(1010, 170, 840, 560));

        JBAgregar.setBackground(new java.awt.Color(61, 199, 105));
        JBAgregar.setFont(new java.awt.Font("Arial", 0, 40)); // NOI18N
        JBAgregar.setText("Agregar");
        JBAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JBAgregarActionPerformed(evt);
            }
        });
        getContentPane().add(JBAgregar, new org.netbeans.lib.awtextra.AbsoluteConstraints(581, 586, 260, 120));

        JBEliminar.setBackground(new java.awt.Color(204, 17, 17));
        JBEliminar.setFont(new java.awt.Font("Arial", 0, 40)); // NOI18N
        JBEliminar.setText("Eliminar");
        JBEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JBEliminarActionPerformed(evt);
            }
        });
        getContentPane().add(JBEliminar, new org.netbeans.lib.awtextra.AbsoluteConstraints(65, 845, 260, 120));

        JLTotal.setFont(new java.awt.Font("Arial", 0, 30)); // NOI18N
        JLTotal.setText("0.0");
        JLTotal.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                JLTotalPropertyChange(evt);
            }
        });
        getContentPane().add(JLTotal, new org.netbeans.lib.awtextra.AbsoluteConstraints(1600, 890, 90, -1));

        jLabel5.setFont(new java.awt.Font("Arial", 0, 35)); // NOI18N
        jLabel5.setText("Total:");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(1442, 894, -1, -1));

        JBVender.setBackground(new java.awt.Color(20, 39, 78));
        JBVender.setFont(new java.awt.Font("Arial", 0, 40)); // NOI18N
        JBVender.setText("Vender");
        JBVender.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JBVenderActionPerformed(evt);
            }
        });
        getContentPane().add(JBVender, new org.netbeans.lib.awtextra.AbsoluteConstraints(703, 844, 260, 120));

        JTFPago.setBackground(new java.awt.Color(155, 164, 180));
        JTFPago.setFont(new java.awt.Font("Arial", 0, 30)); // NOI18N
        JTFPago.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JTFPagoActionPerformed(evt);
            }
        });
        JTFPago.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                JTFPagoKeyTyped(evt);
            }
            public void keyPressed(java.awt.event.KeyEvent evt) {
                JTFPagoKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                JTFPagoKeyReleased(evt);
            }
        });
        getContentPane().add(JTFPago, new org.netbeans.lib.awtextra.AbsoluteConstraints(1590, 770, 150, 78));

        jLabel1.setFont(new java.awt.Font("Arial", 0, 35)); // NOI18N
        jLabel1.setText("Pago:");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(1441, 794, -1, -1));

        JLCambio.setFont(new java.awt.Font("Arial", 0, 30)); // NOI18N
        JLCambio.setText("0.0");
        JLCambio.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                JLCambioPropertyChange(evt);
            }
        });
        getContentPane().add(JLCambio, new org.netbeans.lib.awtextra.AbsoluteConstraints(1600, 980, 90, -1));

        jLabel7.setFont(new java.awt.Font("Arial", 0, 35)); // NOI18N
        jLabel7.setText("Cambio:");
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(1441, 984, -1, -1));

        JBModificar.setBackground(new java.awt.Color(57, 72, 103));
        JBModificar.setFont(new java.awt.Font("Arial", 0, 40)); // NOI18N
        JBModificar.setText("Modificar");
        JBModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JBModificarActionPerformed(evt);
            }
        });
        getContentPane().add(JBModificar, new org.netbeans.lib.awtextra.AbsoluteConstraints(375, 845, 260, 120));

        JBCerrar.setBackground(new java.awt.Color(215, 80, 56));
        JBCerrar.setFont(new java.awt.Font("Arial", 0, 40)); // NOI18N
        JBCerrar.setText("Cerrar Caja");
        JBCerrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JBCerrarActionPerformed(evt);
            }
        });
        getContentPane().add(JBCerrar, new org.netbeans.lib.awtextra.AbsoluteConstraints(1013, 844, 260, 120));

        FondoBlancoV.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Fondo Blanco - Reporte.png"))); // NOI18N
        getContentPane().add(FondoBlancoV, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, -1, -1));

        FondoAzul.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Fondo Azul.jpg"))); // NOI18N
        getContentPane().add(FondoAzul, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        jLabel6.setText("Inicial:");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 80, -1, -1));

        JLInicial.setText("0.0");
        JLInicial.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                JLInicialMouseClicked(evt);
            }
        });
        JLInicial.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
                JLInicialInputMethodTextChanged(evt);
            }
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
            }
        });
        JLInicial.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                JLInicialPropertyChange(evt);
            }
        });
        getContentPane().add(JLInicial, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 80, 50, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void JBAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JBAgregarActionPerformed
        agregar();
    }//GEN-LAST:event_JBAgregarActionPerformed

    private void JBEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JBEliminarActionPerformed
        eliminar();
    }//GEN-LAST:event_JBEliminarActionPerformed

    private void JBVenderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JBVenderActionPerformed
        if(!JTFPago.getText().isEmpty()) {
            tomarDatosDeTabla();
        } else {
            JOptionPane.showMessageDialog(this, "Por favor, ingrese una cantidad de pago");
        }
    }//GEN-LAST:event_JBVenderActionPerformed

    private void JTFPagoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JTFPagoActionPerformed

    }//GEN-LAST:event_JTFPagoActionPerformed

    private void JTFPagoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_JTFPagoKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            double cambio = Double.parseDouble(JTFPago.getText()) - Double.parseDouble(JLTotal.getText());
            cambio = Math.round(cambio * 100) / 100d;
            if (Double.parseDouble(JLCambio.getText()) < 0) {
                JLCambio.setText("0.0");
            } else {
                JLCambio.setText(String.valueOf(cambio));
            }
        }
    }//GEN-LAST:event_JTFPagoKeyPressed

    private void JTFPagoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_JTFPagoKeyReleased
        pago();
    }//GEN-LAST:event_JTFPagoKeyReleased

    private void JTListadoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_JTListadoMouseClicked
        int fila = JTListado.getSelectedRow();
        JCBProductos.setSelectedItem(modeloTabla.getValueAt(fila, 1));
        JLPrecio.setText(String.valueOf(modeloTabla.getValueAt(fila, 2)));
        JTFCantidad.setText(String.valueOf(modeloTabla.getValueAt(fila, 3)));
    }//GEN-LAST:event_JTListadoMouseClicked

    private void JBModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JBModificarActionPerformed
        if (JTListado.getSelectedRowCount() == 1) {
            double ini = Double.parseDouble(JLInicial.getText());
            double importeAnterior = Double.parseDouble(String.valueOf(modeloTabla.getValueAt(JTListado.getSelectedRow(), 4)));
            double total = Double.parseDouble(JLTotal.getText()) - importeAnterior;
            double totalIni = ini - importeAnterior;
            modeloTabla.setValueAt(String.valueOf(getSelectedIndexProductos), JTListado.getSelectedRow(), 0);
            modeloTabla.setValueAt(JCBProductos.getSelectedItem(), JTListado.getSelectedRow(), 1);
            modeloTabla.setValueAt(JLPrecio.getText(), JTListado.getSelectedRow(), 2);
            modeloTabla.setValueAt(JTFCantidad.getText(), JTListado.getSelectedRow(), 3);
            modeloTabla.setValueAt(String.valueOf(Double.parseDouble(JLPrecio.getText()) * Double.parseDouble(JTFCantidad.getText())), JTListado.getSelectedRow(), 4);
            total += Double.parseDouble(String.valueOf(modeloTabla.getValueAt(JTListado.getSelectedRow(), 4)));
            totalIni += Double.parseDouble(String.valueOf(modeloTabla.getValueAt(JTListado.getSelectedRow(), 4)));
            JLTotal.setText(String.valueOf(total));
            JLInicial.setText(String.valueOf(totalIni));
            limpiar();
            JTListado.clearSelection();
        } else {
            if (JTListado.getRowCount() == 0) {
                JOptionPane.showMessageDialog(this, "Tabla vacía");
            } else {
                JOptionPane.showMessageDialog(this, "Seleccione una sola columna");
            }
        }
    }//GEN-LAST:event_JBModificarActionPerformed

    private void JLInicialMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_JLInicialMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_JLInicialMouseClicked

    private void JLInicialInputMethodTextChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_JLInicialInputMethodTextChanged

    }//GEN-LAST:event_JLInicialInputMethodTextChanged

    private void JLInicialPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_JLInicialPropertyChange
        if (Double.parseDouble(JLInicial.getText()) < 0) {
            JLInicial.setText("0.0");
        }
    }//GEN-LAST:event_JLInicialPropertyChange

    private void JLCambioPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_JLCambioPropertyChange
        if (Double.parseDouble(JLCambio.getText()) < 0) {
            JLCambio.setText("0.0");
        }
    }//GEN-LAST:event_JLCambioPropertyChange

    private void JLTotalPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_JLTotalPropertyChange

    }//GEN-LAST:event_JLTotalPropertyChange

    private void JTListadoMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_JTListadoMouseExited

    }//GEN-LAST:event_JTListadoMouseExited

    private void JBCerrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JBCerrarActionPerformed
        
        Corte c = new Corte();
        c.setVisible(true);
        Corte.JLTotalVendido.setText(JLInicial.getText());
        dispose();
    }//GEN-LAST:event_JBCerrarActionPerformed

    private void JTFCantidadKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_JTFCantidadKeyTyped
        char c = evt.getKeyChar();
        if ((c < '0' || c > '9') && (c != ' ')) evt.consume();
    }//GEN-LAST:event_JTFCantidadKeyTyped

    private void JTFPagoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_JTFPagoKeyTyped
        char c = evt.getKeyChar();
        if ((c < '0' || c > '9') && (c != ' ')) evt.consume();
    }//GEN-LAST:event_JTFPagoKeyTyped

    private void pago() {
        if (!JTFPago.getText().isEmpty()) {
            double cambio = Double.parseDouble(JTFPago.getText()) - Double.parseDouble(JLTotal.getText());
            cambio = Math.round(cambio * 100) / 100d;
            if (Double.parseDouble(JLCambio.getText()) < 0) {
                JLCambio.setText("0.0");
            } else {
                JLCambio.setText(String.valueOf(cambio));
            }
        }
    }

    private void agregar() {
        double t = 0;
        String[] datos = new String[5];
        datos[0] = String.valueOf(getSelectedIndexProductos);
        datos[1] = getSelectedItemProductos;
        datos[2] = JLPrecio.getText();
        datos[3] = JTFCantidad.getText();
        datos[4] = String.valueOf(Double.parseDouble(JTFCantidad.getText()) * Double.parseDouble(JLPrecio.getText()));
        t += Double.parseDouble(JTFCantidad.getText()) * Double.parseDouble(JLPrecio.getText());
        if (Double.parseDouble(JTFCantidad.getText()) < Double.parseDouble(cantidad)) {
            modeloTabla.addRow(datos);
            JLTotal.setText(String.valueOf(Double.parseDouble(JLTotal.getText()) + t));
            JLInicial.setText(String.valueOf(Double.parseDouble(JLInicial.getText()) + t));
            limpiar();
        } else {
            JOptionPane.showMessageDialog(null, "No contamos con " + JTFCantidad.getText() + " " + getSelectedItemProductos + " disponibles para la venta");
            JTFCantidad.setText("");
        }
    }

    private void eliminar() {
        double quitar = 0.0;
        int fila = JTListado.getSelectedRow();
        if (fila >= 0) {
            quitar += Double.parseDouble(String.valueOf(modeloTabla.getValueAt(fila, 4)));
            JLTotal.setText(String.valueOf(Double.parseDouble(JLTotal.getText()) - quitar));
            JLInicial.setText(String.valueOf(Double.parseDouble(JLInicial.getText()) - quitar));
            modeloTabla.removeRow(fila);
            limpiar();
        } else {
            JOptionPane.showMessageDialog(null, "Selecciona una fila");
        }
    }

    private void llenarComboBoxProductos() {
        PreparedStatement ps;
        ResultSet rs;
        try {
            Connection con = Conexion.getConexion();
            ps = con.prepareStatement("SELECT NombreProducto FROM Productos");
            rs = ps.executeQuery();
            while (rs.next()) {
                String producto = rs.getString("NombreProducto");
                JCBProductos.addItem(producto);
            }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, e.toString());
        }
    }

    private void limpiar() {
        JCBProductos.setSelectedIndex(0);
        JLPrecio.setText("0.0");
        JTFCantidad.setText("");
    }
    
    private void limpiarVendido() {
        JCBProductos.setSelectedIndex(0);
        JLPrecio.setText("0.0");
        JTFCantidad.setText("");
        JTFPago.setText("");
        JLTotal.setText("0.0");
        JLCambio.setText("0.0");
    }

    private void tomarDatosDeTabla() {
        DateTimeFormatter fecha = DateTimeFormatter.ofPattern("yyyy/MM/dd");
        DateTimeFormatter hora = DateTimeFormatter.ofPattern("HH:mm:ss");
        LocalDateTime ahora = LocalDateTime.now();
        String Fecha = fecha.format(ahora);
        String Hora = hora.format(ahora);
        int IDVenta = 0;
        if (Double.parseDouble(JTFPago.getText()) > Double.parseDouble(JLTotal.getText())) {
            for (int i = 0; i < JTListado.getRowCount(); ++i) {
                System.out.print("ID Producto " + JTListado.getValueAt(i, 0) + "\n");
                System.out.print("Producto " + JTListado.getValueAt(i, 1) + "\n");
                System.out.print("Precio " + JTListado.getValueAt(i, 2) + "\n");
                System.out.print("Cantidad " + JTListado.getValueAt(i, 3) + "\n");
                System.out.print("Importe " + JTListado.getValueAt(i, 4) + "\n");
                try {
                    Connection con = Conexion.getConexion();
                    String query = "INSERT INTO Ventas(Hora, Fecha, TotalPagar)VALUES(?, ?, ?)";
                    //Tabla 2
                    PreparedStatement ps = con.prepareStatement(query, Statement.RETURN_GENERATED_KEYS);
                    ps.setString(1, Hora);
                    ps.setString(2, Fecha);
                    ps.setDouble(3, Double.parseDouble(JLTotal.getText()));
                    ps.executeUpdate();
                    ResultSet GKR = ps.getGeneratedKeys();
                    if (GKR.next()) {
                        IDVenta = GKR.getInt(1);
                    }
                    //Tabla 2
                    PreparedStatement ps2 = con.prepareStatement("INSERT INTO VentasDetalladas(CantidadVendida, FIDVenta, FIDProducto)VALUES(?, ?, ?)");
                    ps2.setInt(1, Integer.parseInt(String.valueOf(JTListado.getValueAt(i, 3))));
                    ps2.setInt(2, IDVenta);
                    ps2.setInt(3, Integer.parseInt(String.valueOf(JTListado.getValueAt(i, 0))));
                    ps2.executeUpdate();
                    //Tabla 3
                    PreparedStatement ps3 = con.prepareStatement("UPDATE Productos SET Cantidad = Cantidad - ? WHERE IDProducto = ?");
                    ps3.setInt(1, Integer.parseInt(String.valueOf(JTListado.getValueAt(i, 3))));
                    ps3.setInt(2, Integer.parseInt(String.valueOf(JTListado.getValueAt(i, 0))));
                    ps3.execute();
                    ps2.addBatch();
                } catch (SQLException e) {
                    System.out.print(e.toString());
                }
            }
            JLInicial.setText(String.valueOf(Double.parseDouble(JLInicial.getText()) - Double.parseDouble(JLCambio.getText())));
            JOptionPane.showMessageDialog(null, "Vendido");
            limpiarVendido();
            modeloTabla.setRowCount(0);
        } else {
            JOptionPane.showMessageDialog(null, "Pago Insuficiente");
            JTFPago.setText("");
        }
    }

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Venta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Venta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Venta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Venta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Venta().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel FondoAzul;
    private javax.swing.JLabel FondoBlancoV;
    private javax.swing.JButton JBAgregar;
    private javax.swing.JButton JBCerrar;
    private javax.swing.JButton JBEliminar;
    private javax.swing.JButton JBModificar;
    private javax.swing.JButton JBVender;
    private javax.swing.JComboBox<String> JCBProductos;
    private javax.swing.JLabel JLCambio;
    public static javax.swing.JLabel JLInicial;
    private javax.swing.JLabel JLPrecio;
    private javax.swing.JLabel JLTotal;
    private javax.swing.JTextField JTFCantidad;
    private javax.swing.JTextField JTFPago;
    private javax.swing.JTable JTListado;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
